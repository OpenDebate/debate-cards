services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.2.3
    env_file: .env
    environment:
      - xpack.security.enabled=false # Dont need for now, complicates things a lot
      - discovery.type=single-node
    healthcheck:
      test: curl -s http://elasticsearch:9200 > /dev/null || exit 1
    ports:
      - 9200:9200
    volumes:
      - elastic:/usr/share/elasticsearch/data
  postgres:
    image: postgres:14
    command: postgres -c wal_level=logical -c max_replication_slots=3 # Options for pgsync
    env_file: .env
    expose:
      - 5432
    healthcheck:
      test: pg_isready -U postgres
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
  redis:
    image: redis:7
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: redis-cli ping
    ports:
      - 6379:6379
    expose:
      - 6379
    volumes:
      - redis:/data
  pgsync:
    build:
      context: .
      dockerfile: ./pgsync/Dockerfile
    depends_on:
      elasticsearch:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    environment:
      - PG_USER=${POSTGRES_USER}
      - PG_HOST=postgres
      - PG_PASSWORD=${POSTGRES_PASSWORD}
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_SCHEME=http
      - ELASTICSEARCH_HOST=elasticsearch
      - REDIS_HOST=redis
      - REDIS_AUTH=${REDIS_PASSWORD}
      - CHECKPOINT_PATH=/checkpoint/
      - ELASTICSEARCH_TIMEOUT=20
      - ELASTICSEARCH_CHUNK_SIZE=250
    volumes:
      - pgsyncCheckpoint:/checkpoint
  tasks:
    build: .
    command: npm run start:tasks
    depends_on:
      - postgres
      - redis
    env_file: .env
    ports:
      - 9229:9229 # Debugging
    profiles:
      - tasks # Dont start by default
    volumes:
      - ${DOCUMENT_PATH:-./documents}:/app/documents
  api:
    build: .
    command: npm run dev:api
    depends_on:
      - postgres
      - elasticsearch 
    env_file: .env
    ports:
      - 4000:4000
      - 5555:5555 # Prisma studio port
      - 9230:9230 # Debugging
    expose:
      - 4000
    volumes:
      - ./src:/app/src
  migrate:
    build:
      context: .
      dockerfile: ./prisma/Dockerfile
    depends_on:
      - postgres
    volumes:
      - ./prisma/migrations:/app/prisma/migrations # Migrations
      - ./node_modules/.prisma:/app/node_modules/.prisma # Client code

volumes:
  db: {}
  elastic: {}
  redis: {}
  pgsyncCheckpoint: {}