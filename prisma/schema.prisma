datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model EvidenceBucket {
  id    Int @id @default(autoincrement())
  count Int @default(0)

  rootId Int      @unique
  root   Evidence @relation("root", fields: [rootId], references: [id])

  evidence Evidence[] @relation("evidence")

  // evidence   Evidence[]
  // evidenceId Int?
  // Evidence   Evidence? @relation(fields: [evidenceId], references: [id])
  // evidenceId Int?
}

model Evidence {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  gid       String   @unique

  tag      String
  cite     String?
  fullcite String?
  summary  String?
  spoken   String?
  fulltext String?
  markup   String
  pocket   String?
  hat      String?
  block    String?

  file   File? @relation(fields: [fileId], references: [id])
  fileId Int?

  bucket   EvidenceBucket? @relation("evidence", fields: [bucketId], references: [id])
  bucketId Int?

  root EvidenceBucket? @relation("root")
}

model Round {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  gid       String     @unique
  status    FileStatus @default(PENDING)

  wiki   String
  school String
  team   String
  side   Side

  entryDate  DateTime
  tournament String
  roundNum   String
  opponent   String
  judge      String

  roundReport String?
  cites       String[]

  openSourceUrl String?
  openSource    File?   @relation(fields: [openSourceId], references: [gid])
  openSourceId  String?
}

model File {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  gid       String   @unique

  name   String
  path   String
  status FileStatus @default(PENDING)

  evidenceSet   EvidenceSet? @relation(fields: [evidenceSetId], references: [id])
  evidenceSetId Int?

  evidence Evidence[]
  tags     Tags[]
  Rounds   Round[]
}

model EvidenceSet {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String @unique
  label String

  files File[]
}

enum Side {
  AFF
  NEG
}

enum FileStatus {
  PENDING
  PROCESSING
  PROCESSED
  ERROR
}

model Tags {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String
  label String

  file   File @relation(fields: [fileId], references: [id])
  fileId Int
}
